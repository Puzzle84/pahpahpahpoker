Array.prototype.shuffle=function(){var e=this.length,t,n,r;if(e===0)return!1;while(--e)t=Math.floor(Math.random()*(e+1)),n=this[e],r=this[t],this[e]=r,this[t]=n;return this},define("tools",function(){}),define("card",["exports"],function(e){function t(){this.ID=null,this.suit=null,this.val=null,this.first=!1,this.last=!1,this.init=function(e,t,n,r,i){this.ID=e,this.suit=t,this.val=n,this.first=r||!1,this.last=i||!1},this.getId=function(){return this.ID},this.getSuit=function(){return this.suit},this.getValue=function(){return this.val},this.getFirst=function(){return this.first},this.getLast=function(){return this.last}}e.card=t}),define("player",["card","exports"],function(e,t){function n(){this.ID=null,this.Name=null,this.money=null,this.cards=[],this.ranks=[],this.currenttable=null,this.playing=!1,this.init=function(e,t,n){this.ID=e,this.Name=t,this.money=n,this.playing=!0},this.getId=function(){return this.ID},this.getName=function(){return this.Name},this.getMoney=function(){return this.money},this.joinTable=function(e){this.currenttable=e},this.receiveHand=function(e){this.flush(),this.cards=e},this.showHand=function(){return this.cards},this.flush=function(){this.cards=[]},this.addMoney=function(e){this.money+=e},this.removeMoney=function(e){this.money-=e},this.addRank=function(e,t){this.ranks.push({rank:t})},this.placeBet=function(e){this.currenttable.addToPot(e),this.removeMoney(e)},this.fold=function(){this.playing=!1},this.leaveTable=function(){this.fold(),this.currentTable!==null&&this.currentTable.removePlayer(this),this.currentTable=null},this.leaveGame=function(){this.leaveTable(),this.cards=null,this.ranks=null}}t.player=n}),define("deck",["card","exports"],function(e,t){function n(){this.suits=[],this.cards=[],this.usedcards=[],this.init=function(){this.suits=["Hearts","Diamonds","Clubs","Spades"],this.fillDeck(),this.shuffleDeck()},this.fillDeck=function(){for(var t=0;t<this.suits.length;t++)for(var n=2;n<=13;n++){var r=new e.card;n===2?this.addCard(this.suits[t],n,!0,!1):n===13?this.addCard(this.suits[t],n,!1,!0):this.addCard(this.suits[t],n,!1,!1)}},this.addCard=function(t,n,r,i){var s=new e.card;s.init(this.cards.length,t,n,r,i),this.cards.push(s)},this.getCards=function(){return this.cards},this.cutDeck=function(){var e=this.cards.length/2,t=this.cards.length-e,n=this.cards.splice(e,t),r=n.concat(this.cards);this.cards=r},this.shuffleDeck=function(){this.cards.shuffle()},this.getTopCard=function(){var e=this.cards.shift();return this.usedcards.push(e),console.log("Card suit: "+e.getSuit()+" | Card value: "+e.getValue()),e},this.putAway=function(){this.cards.clear(),this.usedcards.clear()}}t.deck=n}),define("dealer",["table","player","deck","card","exports"],function(e,t,n,r,i){function s(){this.ID=null,this.table=null,this.deck=null,this.active=!1,this.init=function(e,t){this.ID=e,this.table=t,this.deck=new n.deck,this.deck.init(),this.deal()},this.getId=function(){return this.ID},this.getDeck=function(){return this.deck},this.getTable=function(){return this.table},this.getActive=function(){return this.active},this.deal=function(){if(this.active===!0){this.deck.cutDeck();for(var e=0;e<this.table.findPlayersStillPlaying().length;e++){console.log("Player #"+e+":");var t=this.dealCards(2),n=this.table.findPlayersStillPlaying()[e];n.receiveHand(t)}console.log("Burn:"),this.burnCard(),console.log("Flop:"),this.addOpenCards(3),console.log("Burn:"),this.burnCard(),console.log("Turn:"),this.addOpenCards(1),console.log("Burn:"),this.burnCard(),console.log("River:"),this.addOpenCards(1),this.active=!1}},this.burnCard=function(){this.dealCards(1)},this.addOpenCards=function(e){var t=this.dealCards(e);this.table.addOpenCards(t)},this.dealCards=function(e){if(this.active===!0){var t=[];for(var n=0;n<e;n++)t.push(this.deck.getTopCard());return t}},this.pause=function(){this.active=!1},this.resume=function(){this.active=!0,this.deal()},this.goHome=function(){this.deck.putAway()},this.score=function(){var e=null,t=null;for(var n=0;n<this.table.Players;n++)var r=this.table.getPlayers()[n],i=this.table.getOpenCards(r.showHand()).concat().sort()},this.findHighestCard=function(e){var t=2;for(var n=0;n<this.player.getCards().length;n++){var r=this.player.getCards()[n].getValue();r>t&&(t=r)}return t}}i.dealer=s}),define("table",["player","dealer","exports"],function(e,t,n){function r(){this.ID=null,this.Name=null,this.minbet=null,this.maxbet=null,this.tablepot=null,this.sidepot=null,this.players=[],this.opencards=[],this.init=function(e,n,r,i){this.ID=e,this.Name=n,this.minbet=r,this.maxbet=i,this.dealer=new t.dealer,this.dealer.init(e,this)},this.getId=function(){return this.ID},this.getName=function(){return this.Name},this.getMinBet=function(){return this.minbet},this.getMaxBet=function(){return this.maxbet},this.getTablePot=function(){return this.tablepot},this.getSidePot=function(){return this.sidepot},this.getOpenCards=function(){return this.opencards},this.addOpenCards=function(e){var t=this.opencards.concat(e);this.opencards=t},this.addToPot=function(e){var t=this.findPlayersStillPlaying(),n=this.findLowestPurse();e<=n?this.addToTablePot(e):(this.addToTablePot(n),this.addtoSidePot(e-n))},this.addToTablePot=function(e){this.tablepot+=e},this.addtoSidePot=function(e){this.sidepot+=e},this.addPlayer=function(e){this.players.push(e),console.log(e.getId()+"#: player "+e.getName()+" added to table: "+this.getName()),this.players.length>1?this.dealer.getDeck().getCards().length===0?(console.log("enough players dealer initiated"),this.dealer.init()):(console.log("enough players dealer actived"),this.dealer.resume()):(console.log("not enough players dealer paused"),this.dealer.pause())},this.removePlayer=function(e){this.players.pop(e),this.checkIfTableIsEmpty()&&this.removeTable()},this.findPlayersStillPlaying=function(){var e=[];for(var t=0;t<this.players.length;t++)this.players[t].playing&&(e.push(this.players[t]),console.log(this.players[t].getName()+" is still playing"));return e},this.findLowestPurse=function(e,t){var n=null;for(var r=0;r<e.length;r++)n!==null&&n>e[r].getMoney()?n=t:n===null&&(n=t);return n},this.checkIfTableIsEmpty=function(){return this.players.length===0?!0:!1},this.closeTable=function(){for(var e=0;e<this.players.length;e++)this.removePlayer(players[e]);this.dealer.goHome(),this.dealer=null}}n.table=r}),define("game",["player","table","exports"],function(e,t,n){function r(){this.players=[],this.tables=[],this.running=!1,this.init=function(){this.running=!0},this.gameTest=function(){var t=new e.player;t.init(this.players.length,"Admin",0),this.addPlayer(t),this.addTable("Rookie Room",1,100),this.addTable("Pro Corner",100,1e3);var n=new e.player;n.init(this.players.length,"Bob",1e3),this.addPlayer(n);var r=new e.player;r.init(this.players.length,"John",1e3),this.addPlayer(r);var i=new e.player;i.init(this.players.length,"Tom",1e3),this.addPlayer(i),this.joinTable(this.tables[0],n),this.joinTable(this.tables[1],r),this.joinTable(this.tables[0],i)},this.addTable=function(e,n,r){if(this.running){e=e||"Table"+this.getTableCount(),n=n||1,r=r||100;var i=this.tables.length,s=new t.table;s.init(i,e,n,r),this.tables.push(s),console.log("table added: "+s.getName())}},this.getTableCount=function(){return this.tables.length},this.getTables=function(){return this.tables},this.showTable=function(e){},this.addPlayer=function(e){this.running&&this.players.push(e),console.log("player: "+e.getName()+" added to game")},this.removePlayer=function(e){this.players.pop(e),this.players.length===0&&this.stopGame()},this.getPlayers=function(){var e=[];for(var t=0;t<this.tables.length;t++){var n=[];e=e.concat(this.tables[t].findPlayersStillPlaying())}return e},this.joinTable=function(e,t){t.joinTable(e),e.addPlayer(t)},this.stopGame=function(){for(var e=0;e<this.tables.length;e++)this.tables[e].closeTable();this.running=!1}}n.game=r}),requirejs.config({baseUrl:"js",paths:{libs:"libs",vendor:"vendor"}}),requirejs(["jquery","tools","game"],function(e,t,n){e(function(){e("body").css({"background-color":"red"})});var r=new n.game;r.init()}),define("main",function(){})