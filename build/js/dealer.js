define(["table","player","deck","card","exports"],function(e,t,n,r,i){function s(){this.ID=null,this.table=null,this.deck=null,this.active=!1,this.init=function(e,t){this.ID=e,this.table=t,this.deck=new n.deck,this.deck.init(),this.deal()},this.getId=function(){return this.ID},this.getDeck=function(){return this.deck},this.getTable=function(){return this.table},this.getActive=function(){return this.active},this.deal=function(){if(this.active===!0){this.deck.cutDeck();var e=this.table.findPlayersStillPlaying();for(var t=0;t<e.length;t++){var n=this.dealCards(2),r=e[t];r.receiveHand(n)}var i=$("#"+this.table.getName()+" .dealer .status");i.append("<div class=event><span>Burn a card!</span></div>"),this.burnCard(),i.append("<div class=event><span>Flop!</span></div>"),this.addOpenCards(3),i.append("<div class=event><span>Burn a card!</span></div>"),this.burnCard(),i.append("<div class=event><span>Turn!</span></div>"),this.addOpenCards(1),i.append("<div class=event><span>Burn a card!</span></div>"),this.burnCard(),i.append("<div class=event><span>River!</span></div>"),this.addOpenCards(1),this.active=!1,this.score()}},this.burnCard=function(){this.dealCards(1)},this.addOpenCards=function(e){var t=this.dealCards(e);this.table.addOpenCards(t)},this.dealCards=function(e){if(this.active===!0){var t=[];for(var n=0;n<e;n++)t.push(this.deck.getTopCard());return t}},this.pause=function(){this.active=!1},this.resume=function(){this.active=!0,this.deal()},this.goHome=function(){this.deck.putAway()},this.score=function(){var e=null,t=null,n=this.table.findPlayersStillPlaying(),r=this.table.getOpenCards();for(var i=0;i<n.length;i++){var s=n[i],o=r.concat(s.showHand()).sort(this.cardComperator),u=null,a=null,f=null,l=2,c=0,h=!1,p=!1,d=!1;for(var v=0;v<o.length;v++){f=this.findFlush(o),f===9?c<9&&(c=9):f===8?c<8&&(c=8):f===5?c<5&&(c=5):f===4&&c<4&&(c=4);if(c<8&&o[v].getValue()!==a){a=o[v].getValue();var m=this.findOccurences(o[v],o);m>3?c<7&&(c=7):m>2?(d===!0?c<6&&(c=6):p===!0?c<6&&(c=6):h===!0&&c<6&&(c=6),d=!0,c<3&&(c=3)):m>1&&(d===!0?c<6&&(c=6):h===!0&&(c<2&&(c=2),p=!0),c<1&&(c=1),h=!0)}}l=this.findHighestCard(o);var g=$("#"+this.table.getName()+" .players #"+s.getName());c===9?g.append("<span>Royal Flush with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===8?g.append("<span>Royal Flush with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===7?g.append("<span>Four of a kind with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===6?g.append("<span>Fullhouse with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===5?g.append("<span>Flush with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===4?g.append("<span>Straight with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===3?g.append("<span>Three of a kind with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===2?g.append("<span>Two pair with the "+l.getFace()+" of "+l.getSuit()+" </span>"):c===1?g.append("<span>Pair with the "+l.getFace()+" of "+l.getSuit()+" </span>"):g.append("<span>"+l.getFace()+" of "+l.getSuit()+" </span>")}},this.cardComperator=function(e,t){return parseInt(e.getValue(),10)-parseInt(t.getValue(),10)},this.findFlush=function(e){var t=[[],[],[],[]];for(var n=0;n<e.length;n++){var r=e[n].getSuit();r==="Hearts"?t[0].push(e[n]):r==="Diamonds"?t[1].push(e[n]):r==="Clubs"?t[2].push(e[n]):r==="Spades"&&t[3].push(e[n])}for(var i=0;i<t.length;i++)if(t[i].length===5){var s=!0,o=null;for(var u=0;u<t[i].length;u++)o===null?o=t[i][u].getValue():o+1!==e[n]&&(s=!1);if(s===!0&&t[i][0].getValue()===10)return 9;if(s===!0)return 9;if(s!==!0)return 5}},this.findOccurences=function(e,t){var n=0;for(var r=0;r<t.length;r++)e.getValue()===t[r].getValue()&&n++;return n},this.findHighestCard=function(e){var t=null;for(var n=0;n<e.length;n++){var r=e[n];t===null?t=r:r.getValue()>t.getValue()&&(t=r)}return t}}i.dealer=s})